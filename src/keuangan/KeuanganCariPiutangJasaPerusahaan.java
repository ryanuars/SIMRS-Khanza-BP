package keuangan;
import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import kepegawaian.DlgCariPetugas;
import simrskhanza.DlgCariPerusahaan;

public class KeuanganCariPiutangJasaPerusahaan extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private PreparedStatement ps,ps2;
    private ResultSet rs,rs2;
    private Jurnal jur=new Jurnal();
    private Connection koneksi=koneksiDB.condb();
    private DecimalFormat df2 = new DecimalFormat("###,###,###,###,###,###,###");   
    private int i=0;
    private boolean sukses=true;
    private String Piutang_Jasa_Perusahaan=Sequel.cariIsi("select set_akun2.Piutang_Jasa_Perusahaan from set_akun2"),
                   Pendapatan_Piutang_Jasa_Perusahaan=Sequel.cariIsi("select set_akun2.Pendapatan_Piutang_Jasa_Perusahaan from set_akun2");
    
    /** Creates new form DlgProgramStudi
     * @param parent
     * @param modal */
    public KeuanganCariPiutangJasaPerusahaan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        tabMode=new DefaultTableModel(null,new Object[]{
                "No.Piutang","Tgl.Piutang","Jatuh Tempo","Instansi/Perusahaan","Petugas","Keterangan","Status"
            }){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };
        tbDokter.setModel(tabMode);

        tbDokter.setPreferredScrollableViewportSize(new Dimension(800,800));
        tbDokter.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 7; i++) {
            TableColumn column = tbDokter.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(90);
            }else if(i==1){
                column.setPreferredWidth(200);
            }else if(i==2){
                column.setPreferredWidth(72);
            }else if(i==3){
                column.setPreferredWidth(200);
            }else if(i==4){
                column.setPreferredWidth(200);
            }else if(i==5){
                column.setPreferredWidth(200);
            }else if(i==6){
                column.setPreferredWidth(140);
            }
        }
        tbDokter.setDefaultRenderer(Object.class, new WarnaTable());

        NoPiutang.setDocument(new batasInput((byte)25).getKata(NoPiutang));
        TCari.setDocument(new batasInput((byte)100).getKata(TCari));  
        if(koneksiDB.CARICEPAT().equals("aktif")){
            TCari.getDocument().addDocumentListener(new javax.swing.event.DocumentListener(){
                @Override
                public void insertUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil();
                    }
                }
                @Override
                public void removeUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil();
                    }
                }
                @Override
                public void changedUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil();
                    }
                }
            });
        }    
             
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        ppCetakNota = new javax.swing.JMenuItem();
        ppHapus = new javax.swing.JMenuItem();
        MnDetailCicilan = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        internalFrame1 = new widget.InternalFrame();
        scrollPane1 = new widget.ScrollPane();
        tbDokter = new widget.Table();
        panelisi3 = new widget.panelisi();
        label15 = new widget.Label();
        NoPiutang = new widget.TextBox();
        label16 = new widget.Label();
        label13 = new widget.Label();
        KdPerusahaan = new widget.TextBox();
        KdPetugas = new widget.TextBox();
        NmPerusahaan = new widget.TextBox();
        NmPetugas = new widget.TextBox();
        BtnPerusahaan = new widget.Button();
        BtnPetugas = new widget.Button();
        label21 = new widget.Label();
        Status = new widget.ComboBox();
        TglPiutang1 = new widget.Tanggal();
        label19 = new widget.Label();
        label12 = new widget.Label();
        TglPiutang2 = new widget.Tanggal();
        TglTempo2 = new widget.Tanggal();
        label18 = new widget.Label();
        TglTempo1 = new widget.Tanggal();
        label20 = new widget.Label();
        RTempo = new widget.RadioButton();
        RPiutang = new widget.RadioButton();
        panelisi1 = new widget.panelisi();
        label10 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        label9 = new widget.Label();
        BtnAll = new widget.Button();
        BtnPrint = new widget.Button();
        BtnKeluar = new widget.Button();

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        ppCetakNota.setBackground(new java.awt.Color(255, 255, 254));
        ppCetakNota.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppCetakNota.setForeground(new java.awt.Color(50, 50, 50));
        ppCetakNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppCetakNota.setText("Cetak Ulang Tagihan");
        ppCetakNota.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ppCetakNota.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppCetakNota.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppCetakNota.setName("ppCetakNota"); // NOI18N
        ppCetakNota.setPreferredSize(new java.awt.Dimension(190, 25));
        ppCetakNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppCetakNotaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(ppCetakNota);

        ppHapus.setBackground(new java.awt.Color(255, 255, 254));
        ppHapus.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppHapus.setForeground(new java.awt.Color(50, 50, 50));
        ppHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppHapus.setText("Hapus Piutang");
        ppHapus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ppHapus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppHapus.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppHapus.setName("ppHapus"); // NOI18N
        ppHapus.setPreferredSize(new java.awt.Dimension(190, 25));
        ppHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppHapusActionPerformed(evt);
            }
        });
        jPopupMenu1.add(ppHapus);

        MnDetailCicilan.setBackground(new java.awt.Color(255, 255, 254));
        MnDetailCicilan.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnDetailCicilan.setForeground(new java.awt.Color(50, 50, 50));
        MnDetailCicilan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnDetailCicilan.setText("Bayar Piutang");
        MnDetailCicilan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MnDetailCicilan.setName("MnDetailCicilan"); // NOI18N
        MnDetailCicilan.setPreferredSize(new java.awt.Dimension(190, 25));
        MnDetailCicilan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnDetailCicilanActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnDetailCicilan);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Cari Piutang Jasa Perusahaan ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        scrollPane1.setComponentPopupMenu(jPopupMenu1);
        scrollPane1.setName("scrollPane1"); // NOI18N
        scrollPane1.setOpaque(true);

        tbDokter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbDokter.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbDokter.setComponentPopupMenu(jPopupMenu1);
        tbDokter.setName("tbDokter"); // NOI18N
        scrollPane1.setViewportView(tbDokter);

        internalFrame1.add(scrollPane1, java.awt.BorderLayout.CENTER);

        panelisi3.setName("panelisi3"); // NOI18N
        panelisi3.setPreferredSize(new java.awt.Dimension(100, 103));
        panelisi3.setLayout(null);

        label15.setText("Nomor Piutang :");
        label15.setName("label15"); // NOI18N
        label15.setPreferredSize(new java.awt.Dimension(60, 23));
        panelisi3.add(label15);
        label15.setBounds(0, 10, 95, 23);

        NoPiutang.setName("NoPiutang"); // NOI18N
        NoPiutang.setPreferredSize(new java.awt.Dimension(207, 23));
        NoPiutang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NoPiutangKeyPressed(evt);
            }
        });
        panelisi3.add(NoPiutang);
        NoPiutang.setBounds(99, 10, 239, 23);

        label16.setText("Instansi :");
        label16.setName("label16"); // NOI18N
        label16.setPreferredSize(new java.awt.Dimension(60, 23));
        panelisi3.add(label16);
        label16.setBounds(315, 10, 130, 23);

        label13.setText("Petugas :");
        label13.setName("label13"); // NOI18N
        label13.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi3.add(label13);
        label13.setBounds(385, 40, 60, 23);

        KdPerusahaan.setEditable(false);
        KdPerusahaan.setName("KdPerusahaan"); // NOI18N
        KdPerusahaan.setPreferredSize(new java.awt.Dimension(80, 23));
        panelisi3.add(KdPerusahaan);
        KdPerusahaan.setBounds(449, 10, 80, 23);

        KdPetugas.setName("KdPetugas"); // NOI18N
        KdPetugas.setPreferredSize(new java.awt.Dimension(80, 23));
        panelisi3.add(KdPetugas);
        KdPetugas.setBounds(449, 40, 80, 23);

        NmPerusahaan.setName("NmPerusahaan"); // NOI18N
        NmPerusahaan.setPreferredSize(new java.awt.Dimension(207, 23));
        panelisi3.add(NmPerusahaan);
        NmPerusahaan.setBounds(531, 10, 240, 23);

        NmPetugas.setEditable(false);
        NmPetugas.setName("NmPetugas"); // NOI18N
        NmPetugas.setPreferredSize(new java.awt.Dimension(207, 23));
        panelisi3.add(NmPetugas);
        NmPetugas.setBounds(531, 40, 240, 23);

        BtnPerusahaan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/190.png"))); // NOI18N
        BtnPerusahaan.setMnemonic('1');
        BtnPerusahaan.setToolTipText("Alt+1");
        BtnPerusahaan.setName("BtnPerusahaan"); // NOI18N
        BtnPerusahaan.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnPerusahaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPerusahaanActionPerformed(evt);
            }
        });
        panelisi3.add(BtnPerusahaan);
        BtnPerusahaan.setBounds(774, 10, 28, 23);

        BtnPetugas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/190.png"))); // NOI18N
        BtnPetugas.setMnemonic('2');
        BtnPetugas.setToolTipText("Alt+2");
        BtnPetugas.setName("BtnPetugas"); // NOI18N
        BtnPetugas.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnPetugas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPetugasActionPerformed(evt);
            }
        });
        panelisi3.add(BtnPetugas);
        BtnPetugas.setBounds(774, 40, 28, 23);

        label21.setText("Status :");
        label21.setName("label21"); // NOI18N
        label21.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi3.add(label21);
        label21.setBounds(385, 70, 60, 23);

        Status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Semua", "Sudah Lunas", "Belum Lunas" }));
        Status.setName("Status"); // NOI18N
        Status.setPreferredSize(new java.awt.Dimension(40, 23));
        panelisi3.add(Status);
        Status.setBounds(449, 70, 160, 23);

        TglPiutang1.setDisplayFormat("dd-MM-yyyy");
        TglPiutang1.setName("TglPiutang1"); // NOI18N
        panelisi3.add(TglPiutang1);
        TglPiutang1.setBounds(129, 40, 90, 23);

        label19.setText("Tanggal Piutang :");
        label19.setName("label19"); // NOI18N
        label19.setPreferredSize(new java.awt.Dimension(60, 23));
        panelisi3.add(label19);
        label19.setBounds(30, 40, 95, 23);

        label12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label12.setText("s.d.");
        label12.setName("label12"); // NOI18N
        label12.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi3.add(label12);
        label12.setBounds(221, 40, 25, 23);

        TglPiutang2.setDisplayFormat("dd-MM-yyyy");
        TglPiutang2.setName("TglPiutang2"); // NOI18N
        panelisi3.add(TglPiutang2);
        TglPiutang2.setBounds(248, 40, 90, 23);

        TglTempo2.setDisplayFormat("dd-MM-yyyy");
        TglTempo2.setName("TglTempo2"); // NOI18N
        panelisi3.add(TglTempo2);
        TglTempo2.setBounds(248, 70, 90, 23);

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("s.d.");
        label18.setName("label18"); // NOI18N
        label18.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi3.add(label18);
        label18.setBounds(221, 70, 25, 23);

        TglTempo1.setDisplayFormat("dd-MM-yyyy");
        TglTempo1.setName("TglTempo1"); // NOI18N
        panelisi3.add(TglTempo1);
        TglTempo1.setBounds(129, 70, 90, 23);

        label20.setText("Jatuh Tempo :");
        label20.setName("label20"); // NOI18N
        label20.setPreferredSize(new java.awt.Dimension(60, 23));
        panelisi3.add(label20);
        label20.setBounds(30, 70, 95, 23);

        buttonGroup1.add(RTempo);
        RTempo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        RTempo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        RTempo.setName("RTempo"); // NOI18N
        RTempo.setPreferredSize(new java.awt.Dimension(90, 23));
        panelisi3.add(RTempo);
        RTempo.setBounds(17, 70, 20, 23);

        buttonGroup1.add(RPiutang);
        RPiutang.setSelected(true);
        RPiutang.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        RPiutang.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        RPiutang.setName("RPiutang"); // NOI18N
        RPiutang.setPreferredSize(new java.awt.Dimension(90, 23));
        panelisi3.add(RPiutang);
        RPiutang.setBounds(17, 40, 20, 23);

        internalFrame1.add(panelisi3, java.awt.BorderLayout.PAGE_START);

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setPreferredSize(new java.awt.Dimension(100, 56));
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label10.setText("Key Word :");
        label10.setName("label10"); // NOI18N
        label10.setPreferredSize(new java.awt.Dimension(65, 23));
        panelisi1.add(label10);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(310, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelisi1.add(TCari);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('5');
        BtnCari.setToolTipText("Alt+5");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelisi1.add(BtnCari);

        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(70, 30));
        panelisi1.add(label9);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setText("Semua");
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelisi1.add(BtnAll);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelisi1.add(BtnPrint);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        internalFrame1.add(panelisi1, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
private void KdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
    Valid.pindah(evt,BtnCari,Nm);
}//GEN-LAST:event_TKdKeyPressed
*/

    private void BtnPerusahaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPerusahaanActionPerformed
        DlgCariPerusahaan perusahaan=new DlgCariPerusahaan(null,false);
        perusahaan.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {}
            @Override
            public void windowClosing(WindowEvent e) {}
            @Override
            public void windowClosed(WindowEvent e) {
                if(perusahaan.getTable().getSelectedRow()!= -1){
                    KdPerusahaan.setText(perusahaan.getTable().getValueAt(perusahaan.getTable().getSelectedRow(),0).toString());
                    NmPerusahaan.setText(perusahaan.getTable().getValueAt(perusahaan.getTable().getSelectedRow(),1).toString());
                    BtnPerusahaan.requestFocus();
                }  
            }
            @Override
            public void windowIconified(WindowEvent e) {}
            @Override
            public void windowDeiconified(WindowEvent e) {}
            @Override
            public void windowActivated(WindowEvent e) {}
            @Override
            public void windowDeactivated(WindowEvent e) {}
        });
        
        perusahaan.getTable().addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {}
            @Override
            public void keyPressed(KeyEvent e) {
                if(e.getKeyCode()==KeyEvent.VK_SPACE){
                    perusahaan.dispose();
                }
            }
            @Override
            public void keyReleased(KeyEvent e) {}
        });
        perusahaan.isCek();
        perusahaan.setSize(internalFrame1.getWidth()-20,internalFrame1.getHeight()-20);
        perusahaan.setLocationRelativeTo(internalFrame1);
        perusahaan.setVisible(true); 
    }//GEN-LAST:event_BtnPerusahaanActionPerformed

    private void BtnPetugasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPetugasActionPerformed
        DlgCariPetugas petugas=new DlgCariPetugas(null,false);
        petugas.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {}
            @Override
            public void windowClosing(WindowEvent e) {}
            @Override
            public void windowClosed(WindowEvent e) {
                if(petugas.getTable().getSelectedRow()!= -1){                   
                    KdPetugas.setText(petugas.getTable().getValueAt(petugas.getTable().getSelectedRow(),0).toString());
                    NmPetugas.setText(petugas.getTable().getValueAt(petugas.getTable().getSelectedRow(),1).toString());
                }   
                KdPetugas.requestFocus();
            }
            @Override
            public void windowIconified(WindowEvent e) {}
            @Override
            public void windowDeiconified(WindowEvent e) {}
            @Override
            public void windowActivated(WindowEvent e) {}
            @Override
            public void windowDeactivated(WindowEvent e) {}
        });
        petugas.emptTeks();
        petugas.setSize(internalFrame1.getWidth()-20,internalFrame1.getHeight()-20);
        petugas.setLocationRelativeTo(internalFrame1);
        petugas.setAlwaysOnTop(false);
        petugas.setVisible(true);
    }//GEN-LAST:event_BtnPetugasActionPerformed

    private void NoPiutangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NoPiutangKeyPressed
        Valid.pindah(evt, BtnKeluar,KdPerusahaan);
    }//GEN-LAST:event_NoPiutangKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            BtnCariActionPerformed(null);
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            BtnCari.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            BtnKeluar.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            tbDokter.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        tampil();
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, TCari, BtnAll);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        NoPiutang.setText("");
        KdPerusahaan.setText("");
        NmPerusahaan.setText("");
        KdPetugas.setText("");
        NmPetugas.setText("");
        tampil();
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnAllActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnPrint, BtnKeluar);
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        BtnCariActionPerformed(evt);
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis. Tidak ada data yang bisa anda print...!!!!");
            TCari.requestFocus();
        }else if(tabMode.getRowCount()!=0){
            Sequel.queryu("delete from temporary where temp37='"+akses.getalamatip()+"'");
            int row=tabMode.getRowCount();
            for(int i=0;i<row;i++){  
                Sequel.menyimpan("temporary","'"+i+"','"+
                                tabMode.getValueAt(i,0).toString()+"','"+
                                tabMode.getValueAt(i,1).toString()+"','"+
                                tabMode.getValueAt(i,2).toString()+"','"+
                                tabMode.getValueAt(i,3).toString()+"','"+
                                tabMode.getValueAt(i,4).toString()+"','"+
                                tabMode.getValueAt(i,5).toString()+"','"+
                                tabMode.getValueAt(i,6).toString()+"','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','"+akses.getalamatip()+"'","Transaksi Piutang"); 
            }
             
            Map<String, Object> param = new HashMap<>();  
            param.put("namars",akses.getnamars());
            param.put("alamatrs",akses.getalamatrs());
            param.put("kotars",akses.getkabupatenrs());
            param.put("propinsirs",akses.getpropinsirs());
            param.put("kontakrs",akses.getkontakrs());
            param.put("emailrs",akses.getemailrs());   
            param.put("logo",Sequel.cariGambar("select setting.logo from setting")); 
            Valid.MyReportqry("rptPiutangJasaPerusahaan.jasper","report","::[ Transaksi Piutang Jasa Perusahaan ]::","select * from temporary where temporary.temp37='"+akses.getalamatip()+"' order by temporary.no",param);
        }
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnPrintActionPerformed(null);
        }else{
            Valid.pindah(evt,BtnAll,BtnAll);
        }
    }//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnPrint,TCari);}
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void ppCetakNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppCetakNotaActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis...!!!!");
            TCari.requestFocus();
        }else if(tbDokter.getSelectedRow()<= -1){
            JOptionPane.showMessageDialog(null,"Maaf, Silahkan pilih data..!!");
        }else{
            if(tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString().trim().equals("")||tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString().trim().equals(">>")){
                Valid.textKosong(TCari,"No.Piutang");
            }else {
                 try{
                    ps=koneksi.prepareStatement(
                        "select piutang_jasa_perusahaan.tgl_piutang,piutang_jasa_perusahaan.jatuh_tempo,petugas.nama,perusahaan_pasien.nama_perusahaan,piutang_jasa_perusahaan.keterangan,piutang_jasa_perusahaan.grand_total,"+
                        "piutang_jasa_perusahaan.persen_jasa_menejemen,piutang_jasa_perusahaan.jasa_menejemen,piutang_jasa_perusahaan.dpp_lain,piutang_jasa_perusahaan.persen_ppn,piutang_jasa_perusahaan.nip,"+
                        "piutang_jasa_perusahaan.ppn,piutang_jasa_perusahaan.persen_pph,piutang_jasa_perusahaan.pph,piutang_jasa_perusahaan.totalpiutang,piutang_jasa_perusahaan.sisapiutang,"+
                        "piutang_jasa_perusahaan.status from piutang_jasa_perusahaan inner join petugas on piutang_jasa_perusahaan.nip=petugas.nip "+
                        "inner join perusahaan_pasien on piutang_jasa_perusahaan.kode_perusahaan=perusahaan_pasien.kode_perusahaan where piutang_jasa_perusahaan.no_piutang=?"
                    );
                    try {
                        ps.setString(1,tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString());
                        rs=ps.executeQuery();
                        if(rs.next()){
                            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                            Sequel.queryu("delete from temporary where temp37='"+akses.getalamatip()+"'");
                            ps2=koneksi.prepareStatement(
                                 "select detail_piutang_jasa_perusahaan.kode_kategori,kategori_piutang_jasa_perusahaan.nama_kategori,detail_piutang_jasa_perusahaan.jml,"+
                                 "detail_piutang_jasa_perusahaan.harga,detail_piutang_jasa_perusahaan.subtotal,detail_piutang_jasa_perusahaan.besar_diskon,"+
                                 "detail_piutang_jasa_perusahaan.total,detail_piutang_jasa_perusahaan.diskon from detail_piutang_jasa_perusahaan inner join kategori_piutang_jasa_perusahaan "+
                                 "on kategori_piutang_jasa_perusahaan.kode_kategori=detail_piutang_jasa_perusahaan.kode_kategori "+
                                 "where detail_piutang_jasa_perusahaan.no_piutang=? order by detail_piutang_jasa_perusahaan.kode_kategori"
                            );
                            try{
                                ps2.setString(1,tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString());
                                rs2=ps2.executeQuery();
                                i=0;
                                while(rs2.next()){
                                    Sequel.menyimpan(
                                        "temporary","'"+i+"','"+rs2.getString("nama_kategori")+"','"+rs2.getString("jml")+"','"+Valid.SetAngka(rs2.getDouble("harga"))+"','"+Valid.SetAngka(rs2.getDouble("subtotal"))+"','"+Valid.SetAngka(rs2.getDouble("diskon"))+"',"+
                                        "'"+Valid.SetAngka(rs2.getDouble("besar_diskon"))+"','"+Valid.SetAngka(rs2.getDouble("total"))+"','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','"+akses.getalamatip()+"'","Transaksi Pemesanan"
                                    ); 
                                    i++;
                                }
                            } catch (Exception e) {
                                System.out.println("Notifikasi : "+e);
                            } finally{
                                if(rs2!=null){
                                    rs2.close();
                                }
                                if(ps2!=null){
                                    ps2.close();
                                }
                            }
                            Map<String, Object> param = new HashMap<>();    
                            param.put("namars",akses.getnamars());
                            param.put("alamatrs",akses.getalamatrs());
                            param.put("kotars",akses.getkabupatenrs());
                            param.put("propinsirs",akses.getpropinsirs());
                            param.put("kontakrs",akses.getkontakrs());
                            param.put("emailrs",akses.getemailrs());  
                            param.put("keterangan",rs.getString("keterangan"));  
                            param.put("perusahaan",rs.getString("nama_perusahaan"));  
                            param.put("notagihan",tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString());  
                            param.put("jatuhtempo",Valid.SetTgl3(rs.getString("jatuh_tempo")));  
                            param.put("tanggalpiutang",Valid.SetTgl3(rs.getString("tgl_piutang")));  
                            param.put("petugas",rs.getString("nama"));  
                            param.put("jabatanpetugas",Sequel.cariIsi("select pegawai.jbtn from pegawai where pegawai.nik=?",rs.getString("nip")));  
                            param.put("grandtotal",Valid.SetAngka(rs.getDouble("grand_total"))); 
                            param.put("besarmenejemen",Valid.SetAngka(rs.getDouble("jasa_menejemen"))); 
                            param.put("persenmenejemen",rs.getString("persen_jasa_menejemen")+""); 
                            param.put("dpplain",Valid.SetAngka(rs.getDouble("dpp_lain")));
                            param.put("besarppn",Valid.SetAngka(rs.getDouble("ppn"))); 
                            param.put("persenppn",rs.getString("persen_ppn")+"");  
                            param.put("besarpph",Valid.SetAngka(rs.getDouble("pph"))); 
                            param.put("persenpph",rs.getString("persen_pph")+"");  
                            param.put("totaltagihan",Valid.SetAngka(rs.getDouble("totalpiutang"))); 
                            param.put("terbilang",Valid.terbilang(rs.getDouble("totalpiutang"))); 
                            param.put("logo",Sequel.cariGambar("select setting.logo from setting")); 
                            String finger=Sequel.cariIsi("select sha1(sidikjari.sidikjari) from sidikjari inner join pegawai on pegawai.id=sidikjari.id where pegawai.nik=?",rs.getString("nip"));
                            param.put("finger","Dikeluarkan di "+akses.getnamars()+", Kabupaten/Kota "+akses.getkabupatenrs()+"\nDitandatangani secara elektronik oleh "+rs.getString("nama")+"\nID "+(finger.equals("")?rs.getString("nip"):finger)+"\n"+Valid.SetTgl3(rs.getString("tgl_piutang")));
                            Valid.MyReportqry("rptSuratPiutangJasaPerusahaan.jasper","report","::[ Tagihan Piutang Jasa Perusahaan ]::","select * from temporary where temporary.temp37='"+akses.getalamatip()+"' order by temporary.no",param);
                            this.setCursor(Cursor.getDefaultCursor());
                        }  
                    } catch (Exception e) {
                        System.out.println("Notif : "+e);
                    } finally{
                        if(rs!=null){
                            rs.close();
                        }
                        if(ps!=null){
                            ps.close();
                        }
                    }  
                }catch(Exception e){
                    System.out.println("Notifikasi : "+e);
                }
            }
        }
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_ppCetakNotaActionPerformed

private void ppHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppHapusActionPerformed
    if(tabMode.getRowCount()==0){
        JOptionPane.showMessageDialog(null,"Maaf, data sudah habis...!!!!");
        TCari.requestFocus();
    }else if(tbDokter.getSelectedRow()<= -1){
        JOptionPane.showMessageDialog(null,"Maaf, Silahkan pilih data..!!");
    }else{
        if(tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString().trim().equals("")){
            Valid.textKosong(TCari,"No.Piutang");
        }else if(tbDokter.getValueAt(tbDokter.getSelectedRow(),6).toString().trim().equals("Sudah Lunas")){
            JOptionPane.showMessageDialog(null,"Maaf, Piutang sudah lunas dan tidak boleh dihapus..!!");
        }else{
            int reply = JOptionPane.showConfirmDialog(rootPane,"Eeiiiiiits, udah bener belum data yang mau dihapus..??","Konfirmasi",JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                Sequel.AutoComitFalse();
                sukses=true;
                double nilaipiutang=Sequel.cariIsiAngka("select piutang_jasa_perusahaan.totalpiutang from piutang_jasa_perusahaan where piutang_jasa_perusahaan.no_piutang=?",tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString());
                
                if(nilaipiutang>0){
                    Sequel.queryu("delete from tampjurnal");
                    if(Sequel.menyimpantf2("tampjurnal","'"+Piutang_Jasa_Perusahaan+"','PIUTANG JASA PERUSAHAAN','0','"+nilaipiutang+"'","Rekening")==false){
                        sukses=false;
                    }  
                    if(Sequel.menyimpantf2("tampjurnal","'"+Pendapatan_Piutang_Jasa_Perusahaan+"','PENDAPATAN PIUTANG JASA PERUSAHAAN','"+nilaipiutang+"','0'","Rekening")==false){
                        sukses=false;
                    }
                    if(sukses==true){
                        sukses=jur.simpanJurnal(tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString(),"U","PEMBATALAN PIUTANG JASA PERUSAHAAN "+tbDokter.getValueAt(tbDokter.getSelectedRow(),3).toString()+", OLEH "+akses.getkode()); 
                    }  
                }
                
                if(sukses==true){
                    sukses=Sequel.meghapustf("piutang_jasa_perusahaan","no_piutang",tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString());
                    Sequel.Commit();
                }else{
                    JOptionPane.showMessageDialog(null,"Terjadi kesalahan saat pemrosesan data, transaksi dibatalkan.\nPeriksa kembali data sebelum melanjutkan menyimpan..!!");
                    Sequel.RollBack();
                }
                Sequel.AutoComitTrue();
                if(sukses==true){
                     tampil();
                } 
            } 
        }
    }
}//GEN-LAST:event_ppHapusActionPerformed

    private void MnDetailCicilanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnDetailCicilanActionPerformed
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis...!!!!");
            TCari.requestFocus();
        }else if(tbDokter.getSelectedRow()<= -1){
            JOptionPane.showMessageDialog(null,"Maaf, Silahkan pilih data..!!");
        }else{
            if(tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString().trim().equals("")){
                Valid.textKosong(TCari,"No.Piutang");
            }else if(tbDokter.getValueAt(tbDokter.getSelectedRow(),6).toString().trim().equals("Sudah Lunas")){
                JOptionPane.showMessageDialog(null,"Maaf, Piutang sudah lunas..!!");
            }else{
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                KeuanganBayarPiutangJasaPerusahaan bayarpiutang=new KeuanganBayarPiutangJasaPerusahaan(null,false);
                bayarpiutang.emptTeks();
                String kodeperusahaan=Sequel.cariIsi("select piutang_jasa_perusahaan.kode_perusahaan from piutang_jasa_perusahaan where piutang_jasa_perusahaan.no_piutang=?",tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString());
                String namaperusahaan=Sequel.cariIsi("select perusahaan_pasien.nama_perusahaan from perusahaan_pasien where perusahaan_pasien.kode_perusahaan=?",kodeperusahaan);
                bayarpiutang.setData(tbDokter.getValueAt(tbDokter.getSelectedRow(),0).toString(),kodeperusahaan,namaperusahaan);
                bayarpiutang.tampil();
                bayarpiutang.setSize(this.getWidth()-20,this.getHeight()-20);
                bayarpiutang.setLocationRelativeTo(this);
                bayarpiutang.setAlwaysOnTop(false);
                bayarpiutang.setVisible(true);
                this.setCursor(Cursor.getDefaultCursor());
            }
        }
    }//GEN-LAST:event_MnDetailCicilanActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            KeuanganCariPiutangJasaPerusahaan dialog = new KeuanganCariPiutangJasaPerusahaan(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnCari;
    private widget.Button BtnKeluar;
    private widget.Button BtnPerusahaan;
    private widget.Button BtnPetugas;
    private widget.Button BtnPrint;
    private widget.TextBox KdPerusahaan;
    private widget.TextBox KdPetugas;
    private javax.swing.JMenuItem MnDetailCicilan;
    private widget.TextBox NmPerusahaan;
    private widget.TextBox NmPetugas;
    private widget.TextBox NoPiutang;
    private widget.RadioButton RPiutang;
    private widget.RadioButton RTempo;
    private widget.ComboBox Status;
    private widget.TextBox TCari;
    private widget.Tanggal TglPiutang1;
    private widget.Tanggal TglPiutang2;
    private widget.Tanggal TglTempo1;
    private widget.Tanggal TglTempo2;
    private javax.swing.ButtonGroup buttonGroup1;
    private widget.InternalFrame internalFrame1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private widget.Label label10;
    private widget.Label label12;
    private widget.Label label13;
    private widget.Label label15;
    private widget.Label label16;
    private widget.Label label18;
    private widget.Label label19;
    private widget.Label label20;
    private widget.Label label21;
    private widget.Label label9;
    private widget.panelisi panelisi1;
    private widget.panelisi panelisi3;
    private javax.swing.JMenuItem ppCetakNota;
    private javax.swing.JMenuItem ppHapus;
    private widget.ScrollPane scrollPane1;
    private widget.Table tbDokter;
    // End of variables declaration//GEN-END:variables

    private void tampil() {
        String tanggal= "",nopiutang="",instansi="",petugas="",status="";
        double totalgrandtotal=0,totaljasamenejemen=0,totaldpplain=0,totalppn=0,totalpph=0,totaltagihan=0,totalsisa=0;
        
        if(RPiutang.isSelected()==true){
            tanggal=" piutang_jasa_perusahaan.tgl_piutang between '"+Valid.SetTgl(TglPiutang1.getSelectedItem()+"")+"' and '"+Valid.SetTgl(TglPiutang2.getSelectedItem()+"")+"' ";
        }else if(RTempo.isSelected()==true){
            tanggal=" piutang_jasa_perusahaan.jatuh_tempo between '"+Valid.SetTgl(TglTempo1.getSelectedItem()+"")+"' and '"+Valid.SetTgl(TglTempo2.getSelectedItem()+"")+"' ";
        }
        
        if(!NoPiutang.getText().trim().equals("")){
            nopiutang=" and piutang_jasa_perusahaan.no_piutang='"+NoPiutang.getText()+"' ";
        }
        
        if(!NmPerusahaan.getText().trim().equals("")){
            instansi=" and piutang_jasa_perusahaan.kode_perusahaan='"+KdPerusahaan.getText()+"' ";
        }
        
        if(!NmPetugas.getText().trim().equals("")){
            petugas=" and piutang_jasa_perusahaan.nip='"+KdPetugas.getText()+"' ";
        }
        
        if(!Status.getSelectedItem().toString().equals("Semua")){
            status=" and piutang_jasa_perusahaan.status='"+Status.getSelectedItem().toString()+"' ";
        }
        
        Valid.tabelKosong(tabMode);
        try{
            ps=koneksi.prepareStatement(
                "select piutang_jasa_perusahaan.no_piutang,piutang_jasa_perusahaan.tgl_piutang,piutang_jasa_perusahaan.jatuh_tempo,piutang_jasa_perusahaan.nip,"+
                "petugas.nama,piutang_jasa_perusahaan.kode_perusahaan,perusahaan_pasien.nama_perusahaan,piutang_jasa_perusahaan.keterangan,piutang_jasa_perusahaan.grand_total,"+
                "piutang_jasa_perusahaan.persen_jasa_menejemen,piutang_jasa_perusahaan.jasa_menejemen,piutang_jasa_perusahaan.dpp_lain,piutang_jasa_perusahaan.persen_ppn,"+
                "piutang_jasa_perusahaan.ppn,piutang_jasa_perusahaan.persen_pph,piutang_jasa_perusahaan.pph,piutang_jasa_perusahaan.totalpiutang,piutang_jasa_perusahaan.sisapiutang,"+
                "piutang_jasa_perusahaan.status from piutang_jasa_perusahaan inner join petugas on piutang_jasa_perusahaan.nip=petugas.nip "+
                "inner join perusahaan_pasien on piutang_jasa_perusahaan.kode_perusahaan=perusahaan_pasien.kode_perusahaan where "+
                tanggal+nopiutang+instansi+petugas+status+(TCari.getText().trim().equals("")?"":" and (piutang_jasa_perusahaan.no_piutang like '%"+TCari.getText().trim()+"%' or "+
                "perusahaan_pasien.nama_perusahaan like '%"+TCari.getText().trim()+"%' or petugas.nama like '%"+TCari.getText().trim()+"%' or "+
                "piutang_jasa_perusahaan.keterangan like '%"+TCari.getText().trim()+"%')")+" order by piutang_jasa_perusahaan.tgl_piutang"
            );
            try {
                rs=ps.executeQuery();
                while(rs.next()){
                    totalgrandtotal=totalgrandtotal+rs.getDouble("grand_total");
                    totaljasamenejemen=totaljasamenejemen+rs.getDouble("jasa_menejemen");
                    totaldpplain=totaldpplain+rs.getDouble("dpp_lain");
                    totalppn=totalppn+rs.getDouble("ppn");
                    totalpph=totalpph+rs.getDouble("pph");
                    totaltagihan=totaltagihan+rs.getDouble("totalpiutang");
                    totalsisa=totalsisa+rs.getDouble("sisapiutang");
                    
                    tabMode.addRow(new Object[]{
                        rs.getString("no_piutang"),rs.getString("tgl_piutang"),rs.getString("jatuh_tempo"),rs.getString("kode_perusahaan")+" "+rs.getString("nama_perusahaan"),
                        rs.getString("nip")+" "+rs.getString("nama"),rs.getString("keterangan"),rs.getString("status")
                    });
                    tabMode.addRow(new Object[]{
                        "","Kategori","Jml","Harga","Subtotal","Diskon","Total"
                    });
                    ps2=koneksi.prepareStatement(
                         "select detail_piutang_jasa_perusahaan.kode_kategori,kategori_piutang_jasa_perusahaan.nama_kategori,detail_piutang_jasa_perusahaan.jml,"+
                         "detail_piutang_jasa_perusahaan.harga,detail_piutang_jasa_perusahaan.subtotal,detail_piutang_jasa_perusahaan.besar_diskon,"+
                         "detail_piutang_jasa_perusahaan.total from detail_piutang_jasa_perusahaan inner join kategori_piutang_jasa_perusahaan "+
                         "on kategori_piutang_jasa_perusahaan.kode_kategori=detail_piutang_jasa_perusahaan.kode_kategori "+
                         "where detail_piutang_jasa_perusahaan.no_piutang=? order by detail_piutang_jasa_perusahaan.kode_kategori"
                    );
                    try{
                        ps2.setString(1,rs.getString("no_piutang"));
                        rs2=ps2.executeQuery();
                        int no=1;
                        while(rs2.next()){
                            tabMode.addRow(new Object[]{
                                "",no+"."+rs2.getString("kode_kategori")+" "+rs2.getString("nama_kategori"),rs2.getString("jml"),df2.format(rs2.getDouble("harga")),
                                df2.format(rs2.getDouble("subtotal")),df2.format(rs2.getDouble("besar_diskon")),df2.format(rs2.getDouble("total"))
                            });
                            no++;
                        }
                    } catch (Exception e) {
                        System.out.println("Notifikasi : "+e);
                    } finally{
                        if(rs2!=null){
                            rs2.close();
                        }
                        if(ps2!=null){
                            ps2.close();
                        }
                    }
                    tabMode.addRow(new Object[]{
                        "","Grand Total",":","","","",df2.format(rs.getDouble("grand_total"))
                    });
                    tabMode.addRow(new Object[]{
                        "","Jasa Menejemen("+rs.getString("persen_jasa_menejemen")+"%)",":","","","",df2.format(rs.getDouble("jasa_menejemen"))
                    });
                    tabMode.addRow(new Object[]{
                        "","DPP Nilai Lain",":","","","",df2.format(rs.getDouble("dpp_lain"))
                    });
                    tabMode.addRow(new Object[]{
                        "","PPN("+rs.getString("persen_ppn")+"%)",":","","","",df2.format(rs.getDouble("ppn"))
                    });
                    tabMode.addRow(new Object[]{
                        "","PPH 23("+rs.getString("persen_pph")+"%)",":","","","",df2.format(rs.getDouble("pph"))
                    });
                    tabMode.addRow(new Object[]{
                        "","Total Tagihan",":","","","",df2.format(rs.getDouble("totalpiutang"))
                    });
                    tabMode.addRow(new Object[]{
                        "","Sisa Piutang",":","","","",df2.format(rs.getDouble("sisapiutang"))
                    });
                }  
            } catch (Exception e) {
                System.out.println("Notif : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }   
            if(totalgrandtotal>0){
                tabMode.addRow(new Object[]{
                    "","","","","","",""
                });
                tabMode.addRow(new Object[]{
                    ">>","Jumlah Grand Total",":","","","",df2.format(totalgrandtotal)
                });
                tabMode.addRow(new Object[]{
                    ">>","Jumlah Jasa Menejemen",":","","","",df2.format(totaljasamenejemen)
                });
                tabMode.addRow(new Object[]{
                    ">>","Jumlah DPP Nilai Lain",":","","","",df2.format(totaldpplain)
                });
                tabMode.addRow(new Object[]{
                    ">>","Jumlah PPN",":","","","",df2.format(totalppn)
                });
                tabMode.addRow(new Object[]{
                    ">>","Jumlah PPH 23",":","","","",df2.format(totalpph)
                });
                tabMode.addRow(new Object[]{
                    ">>","Jumlah Total Tagihan",":","","","",df2.format(totaltagihan)
                });
                tabMode.addRow(new Object[]{
                    ">>","Jumlah Sisa Piutang",":","","","",df2.format(totalsisa)
                });
            }
        }catch(Exception e){
            System.out.println("Notifikasi : "+e);
        }
    }

    public void isCek(){
        MnDetailCicilan.setEnabled(akses.getbayar_piutang_jasa_perusahaan());
        BtnPrint.setEnabled(akses.getpiutang_jasa_perusahaan());
        ppCetakNota.setEnabled(akses.getpiutang_jasa_perusahaan());
        ppHapus.setEnabled(akses.getpiutang_jasa_perusahaan());
    }
 
    public void cariNoTagihan(String notagihan,Date Taggal){
        NoPiutang.setText(notagihan);
        TglPiutang1.setDate(Taggal);
        TglPiutang2.setDate(Taggal);
        tampil();
    }
}
